import json
from support.tools import (
    bcolors,
    DIR_JSON_FILES,
    print_long_result_like_table
)
from support.support_db import (
    input_objects_from_json
)
from tasks.class_system import (
    Person,
    Order
)


def input_data_from_json():
    person_table = input_objects_from_json(f'{DIR_JSON_FILES}/persons.json', Person)
    order_table = input_objects_from_json(f'{DIR_JSON_FILES}/orders.json', Order)

    return person_table, order_table


def request_01(persons, orders):
    print(f"\n{bcolors.BOLD}\t\t\t{bcolors.UNDERLINE}–ó–ê–ü–†–û–° ‚Ññ1{bcolors.ENDC}"
          f"\n{bcolors.BOLD}–ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏–∑ json-–¥–æ–∫—É–º–µ–Ω—Ç–∞{bcolors.ENDC}\n")

    print(f"{bcolors.OKCYAN}–†–µ–∑—É–ª—å—Ç–∞—Ç{bcolors.ENDC}\n–¢–∞–±–ª–∏—Ü–∞ persons")
    print_long_result_like_table([p.get() for p in persons], Person.FIELD_SCHEMA, 5)

    print(f"{bcolors.OKCYAN}–†–µ–∑—É–ª—å—Ç–∞—Ç{bcolors.ENDC}\n–¢–∞–±–ª–∏—Ü–∞ orders")
    print_long_result_like_table([o.get() for o in orders], Order.FIELD_SCHEMA, 5)


def request_02(persons):
    print(f"\n{bcolors.BOLD}\t\t{bcolors.UNDERLINE}–ó–ê–ü–†–û–° ‚Ññ2{bcolors.ENDC}"
          f"\n{bcolors.BOLD}–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ json-–¥–æ–∫—É–º–µ–Ω—Ç–∞{bcolors.ENDC}\n")

    """ –ü–æ–º–µ–Ω—è—Ç—å —á–µ–ª–æ–≤–µ–∫—É —Å id = 3002 –∏–º—è –Ω–∞ –ü–∞—Ñ–Ω—É—Ç–∏–π üêÅ"""

    for p in persons:
        if p.person_id == 3002:
            p.name = '–ü–∞—Ñ–Ω—É—Ç–∏–π üêÅ'

    with open(f'{DIR_JSON_FILES}/persons_update.json', 'w') as f:
        for elem in persons:
            f.write(json.dumps(elem.get()))

    print(f"{bcolors.OKCYAN}–†–µ–∑—É–ª—å—Ç–∞—Ç{bcolors.ENDC}\n–¢–∞–±–ª–∏—Ü–∞ persons")
    print_long_result_like_table([p.get() for p in persons], Person.FIELD_SCHEMA, 5)


def request_03(persons):
    print(f"\n{bcolors.BOLD}\t\t{bcolors.UNDERLINE}–ó–ê–ü–†–û–° ‚Ññ3{bcolors.ENDC}"
          f"\n{bcolors.BOLD}–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ json-–¥–æ–∫—É–º–µ–Ω—Ç{bcolors.ENDC}\n")

    persons.append(Person(1, 'Alex', 'TMO', 'TMO', '2022-11-18', None))

    with open(f'{DIR_JSON_FILES}/persons_update.json', 'w') as f:
        for elem in persons:
            f.write(json.dumps(elem.get()))

    print(f"{bcolors.OKCYAN}–†–µ–∑—É–ª—å—Ç–∞—Ç{bcolors.ENDC}\n–¢–∞–±–ª–∏—Ü–∞ persons")
    print_long_result_like_table([p.get() for p in persons], Person.FIELD_SCHEMA, 5)


def task_02():
    persons, orders = input_data_from_json()

    request_01(persons, orders)
    request_02(persons)
    request_03(persons)

